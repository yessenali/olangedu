1 task)
--CREATE DIRECTORY utl_dir AS 'C:/';
--GRANT READ, WRITE ON DIRECTORY utl_dir to public;

CREATE OR REPLACE PROCEDURE EMPLOYEE_REPORT
(
    par_dir IN VARCHAR2,
    par_txt_file IN VARCHAR2
) IS

file_d UTL_FILE.FILE_TYPE;

CURSOR cur IS
(
SELECT e.first_name, e.department_id, e.salary
FROM hr.employees e
WHERE salary >
(
    SELECT AVG(salary)
    FROM hr.employees
    WHERE department_id = e.department_id
)
);
temp cur%ROWTYPE;

BEGIN
    file_desc := UTL_FILE.FOPEN(par_dir, par_txt_file, 'w');
    
    UTL_FILE.PUT_LINE(file_d, 'Employees who earn more than average salary');
    UTL_FILE.PUT_LINE(file_d, 'Report generated one 21-MAR-2021');
    
    /*
    FOR temp IN cur 
        LOOP
            UTL_FILE.PUT_LINE(file_d, temp.first_name ||' '|| temp.department_id ||' $'|| temp.salary);        
            UTL_FILE.PUT_LINE(file_d,'skgsdgkndsgs');
        END LOOP;
    */
    
    OPEN cur;
        FETCH cur into temp;
        LOOP
            EXIT WHEN cur%NOTFOUND;
            UTL_FILE.PUT_LINE(file_d, temp.first_name ||' '|| temp.department_id ||' $'|| temp.salary);        
            UTL_FILE.PUT_LINE(file_d,'skgsdgkndsgs');
        END LOOP;
    CLOSE cur;
            EXCEPTION
        WHEN UTL_FILE.INVALID_PATH THEN
        RAISE_APPLICATION_ERROR(-20100,'Неверный путь');
        WHEN UTL_FILE.INVALID_MODE THEN
        RAISE_APPLICATION_ERROR(-20101,'Неверный режим');
        WHEN UTL_FILE.INVALID_OPERATION then
        RAISE_APPLICATION_ERROR(-20102,'Неверная операция');
        WHEN UTL_FILE.INVALID_FILEHANDLE then
        RAISE_APPLICATION_ERROR(-20103,'Неверный файловый дескриптор');
        WHEN UTL_FILE.WRITE_ERROR then
        RAISE_APPLICATION_ERROR(-20104,'Ошибка записи');
        WHEN UTL_FILE.READ_ERROR then
        RAISE_APPLICATION_ERROR(-20105,'Ошибка чтения');
        WHEN UTL_FILE.INTERNAL_ERROR then
        RAISE_APPLICATION_ERROR(-20106,'Внутренняя ошибка');
        WHEN OTHERS THEN
        UTL_FILE.FCLOSE(file_d);
END;

CREATE DIRECTORY UTL_TEST_DIR AS 'C:\Users\Student\Desktop\File';
GRANT READ, WRITE ON DIRECTORY UTL_TEST_DIR to public;

BEGIN
    EMPLOYEE_REPORT('UTL_TEST_DIR', 'tiexti.txt');
END;
2 task)
--A 
CREATE OR REPLACE PROCEDURE schedule_report( 
interval VARCHAR2, minutes NUMBER := 10) IS 
plsql_block VARCHAR2(200) := 
'BEGIN'|| 
' EMPLOYEE_REPORT(''UTL_FILE'','|| 
'''sal_rpt01_''||to_char(sysdate,''HH24-MI-SS'')||''.txt''); '|| 
'END;'; 
BEGIN
DBMS_SCHEDULER.CREATE_JOB( 
job_name => 'EMPSAL_REPORT', 
job_type => 'PLSQL_BLOCK', 
job_action => plsql_block, 
start_date => SYSDATE, 
repeat_interval => interval, 
end_date => SYSDATE + minutes/(24*60), 
enabled => TRUE); 
END; 
/

--B
EXECUTE schedule_report('FREQUENCY=MINUTELY;INTERVAL=2', 10)
EXECUTE employee_report('UTL_FILE','sal_rpt1.txt')